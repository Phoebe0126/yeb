<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxxx.server.mapper.EmployeeMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.xxxx.server.pojo.Employee">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="gender" property="gender" />
        <result column="birthday" property="birthday" />
        <result column="idCard" property="idCard" />
        <result column="wedlock" property="wedlock" />
        <result column="nationId" property="nationId" />
        <result column="nativePlace" property="nativePlace" />
        <result column="politicId" property="politicId" />
        <result column="email" property="email" />
        <result column="phone" property="phone" />
        <result column="address" property="address" />
        <result column="departmentId" property="departmentId" />
        <result column="jobLevelId" property="jobLevelId" />
        <result column="posId" property="posId" />
        <result column="engageForm" property="engageForm" />
        <result column="tiptopDegree" property="tiptopDegree" />
        <result column="specialty" property="specialty" />
        <result column="school" property="school" />
        <result column="beginDate" property="beginDate" />
        <result column="workState" property="workState" />
        <result column="workID" property="workID" />
        <result column="contractTerm" property="contractTerm" />
        <result column="conversionTime" property="conversionTime" />
        <result column="notWorkDate" property="notWorkDate" />
        <result column="beginContract" property="beginContract" />
        <result column="endContract" property="endContract" />
        <result column="workAge" property="workAge" />
        <result column="salaryId" property="salaryId" />
    </resultMap>

<!--    WHERE e.departmentId = d.id-->
<!--    AND e.jobLevelId = j.id-->
<!--    AND e.posId = pos.id-->
<!--    AND e.nationId = n.id-->
<!--    AND e.politicId = ps.id-->
    <resultMap id="employeeInfo" type="com.xxxx.server.pojo.Employee" extends="BaseResultMap">
        <association property="department" javaType="com.xxxx.server.pojo.Department">
            <id column="did" property="id"/>
            <result column="dname" property="name"/>
        </association>
        <association property="joblevel" javaType="com.xxxx.server.pojo.Joblevel">
            <id column="jid" property="id"/>
            <result column="jname" property="name"/>
        </association>
        <association property="position" javaType="com.xxxx.server.pojo.Position">
            <id column="posid" property="id"/>
            <result column="posname" property="name"/>
        </association>
        <association property="nation" javaType="com.xxxx.server.pojo.Nation">
            <id column="nid" property="id"/>
            <result column="nname" property="name"/>
        </association>
        <association property="politicsStatus" javaType="com.xxxx.server.pojo.PoliticsStatus">
            <id column="psid" property="id"/>
            <result column="psname" property="name"/>
        </association>
    </resultMap>


    <resultMap id="employeeWithSalary" type="com.xxxx.server.pojo.Employee" extends="BaseResultMap">
        <association property="department" javaType="com.xxxx.server.pojo.Department">
            <id column="departmentId" property="id"/>
            <result column="dname" property="name"/>
        </association>
        <association property="salary" javaType="com.xxxx.server.pojo.Salary">
            <id column="sid" property="id" />
            <result column="sbasicSalary" property="basicSalary" />
            <result column="sbonus" property="bonus" />
            <result column="slunchSalary" property="lunchSalary" />
            <result column="strafficSalary" property="trafficSalary" />
            <result column="sallSalary" property="allSalary" />
            <result column="spensionBase" property="pensionBase" />
            <result column="spensionPer" property="pensionPer" />
            <result column="screateDate" property="createDate" />
            <result column="smedicalBase" property="medicalBase" />
            <result column="smedicalPer" property="medicalPer" />
            <result column="saccumulationFundBase" property="accumulationFundBase" />
            <result column="saccumulationFundPer" property="accumulationFundPer" />
            <result column="sname" property="name" />
        </association>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, name, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId, email, phone, address, departmentId, jobLevelId, posId, engageForm, tiptopDegree, specialty, school, beginDate, workState, workID, contractTerm, conversionTime, notWorkDate, beginContract, endContract, workAge, salaryId
    </sql>

    <select id="getEmployeeByPage" resultMap="employeeInfo">
        SELECT
            e.*,
            d.id AS did,
            d.`name` AS dname,
            j.id AS jid,
            j.`name` AS jname,
            pos.id AS posid,
            pos.`name` AS posname,
            n.id AS nid,
            n.`name` AS nname,
            ps.id AS psid,
            ps.`name` AS psname

        FROM
            t_employee AS e,
            t_department AS d,
            t_joblevel AS j,
            t_position AS pos,
            t_nation AS n,
            t_politics_status AS ps

        WHERE e.departmentId = d.id
          AND e.jobLevelId = j.id
          AND e.posId = pos.id
          AND e.nationId = n.id
          AND e.politicId = ps.id


          <if test="null!=employee.name and ''!=employee.name">
              AND e.`name` LIKE CONCAT('%',#{employee.name},'%')
          </if>
          <if test="null!=employee.departmentId">
              AND e.departmentId = #{employee.departmentId}
          </if>
          <if test="null!=employee.jobLevelId">
              AND e.jobLevelId = #{employee.jobLevelId}
          </if>
          <if test="null!=employee.posId">
              AND e.posId = #{employee.posId}
          </if>
          <if test="null!=employee.nationId">
              AND e.nationId = #{employee.nationId}
          </if>
          <if test="null!=employee.politicId">
              AND e.politicId = #{employee.politicId}
          </if>
          <if test="null!=beginDateScope and 2==beginDateScope.length">
              AND e.beginDate BETWEEN #{beginDateScope[0]}   AND  #{beginDateScope[1]}
          </if>
    </select>

    <select id="getAllEmployees" resultMap="employeeInfo">
        SELECT
            e.*,
            d.id AS did,
            d.`name` AS dname,
            j.id AS jid,
            j.`name` AS jname,
            pos.id AS posid,
            pos.`name` AS posname,
            n.id AS nid,
            n.`name` AS nname,
            ps.id AS psid,
            ps.`name` AS psname

        FROM
            t_employee AS e,
            t_department AS d,
            t_joblevel AS j,
            t_position AS pos,
            t_nation AS n,
            t_politics_status AS ps

        WHERE e.departmentId = d.id
          AND e.jobLevelId = j.id
          AND e.posId = pos.id
          AND e.nationId = n.id
          AND e.politicId = ps.id
          <if test="null!=id">
              AND e.id = #{id}
          </if>
          ORDER BY e.id
    </select>

    <select id="getEmployeeWithSalary" resultMap="employeeWithSalary">
        SELECT
            e.*,
            d.`name` AS dname,
            s.id AS sid,
            s.basicSalary AS sbasicSalary,
            s.bonus AS sbonus,
            s.lunchSalary AS slunchSalary,
            s.trafficSalary AS strafficSalary,
            s.allSalary AS sallSalary,
            s.pensionBase AS spensionBase,
            s.pensionPer AS spensionPer,
            s.createDate AS screateDate,
            s.medicalBase AS smedicalBase,
            s.medicalPer AS smedicalPer,
            s.accumulationFundBase AS saccumulationFundBase,
            s.accumulationFundPer AS saccumulationFundPer,
            s.`name` AS sname

        FROM
            t_employee AS e
                LEFT JOIN t_salary AS s ON e.salaryId = s.id
                LEFT JOIN t_department AS d ON e.departmentId = d.id

        ORDER BY e.id
    </select>

</mapper>
